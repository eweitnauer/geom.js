// Copyright Erik Weitnauer 2017. [v1.0.5]
Point=function(t,i){if(arguments.length==0){this.x=0;this.y=0}else if(arguments.length==1){this.x=t.x;this.y=t.y}else{this.x=t;this.y=i}};Point.norm_angle=function(t){t=t%(Math.PI*2);if(t<-Math.PI)t+=Math.PI*2;else if(t>Math.PI)t-=Math.PI*2;return t};Point.prototype.rotate=function(t){return new Point(this.x*Math.cos(t)-this.y*Math.sin(t),this.y*Math.cos(t)+this.x*Math.sin(t))};Point.prototype.Rotate=function(t){return this.Set(this.x*Math.cos(t)-this.y*Math.sin(t),this.y*Math.cos(t)+this.x*Math.sin(t))};Point.prototype.Set=function(t,i){if(arguments.length==1){this.x=t.x;this.y=t.y}else{this.x=t;this.y=i}return this};Point.prototype.dist=function(t){var i=this.x-t.x,e=this.y-t.y;return Math.sqrt(i*i+e*e)};Point.prototype.dist2=function(t){var i=this.x-t.x,e=this.y-t.y;return i*i+e*e};Point.len=function(t,i){return Math.sqrt(t*t+i*i)};Point.prototype.len=function(){return Math.sqrt(this.x*this.x+this.y*this.y)};Point.prototype.len2=function(){return this.x*this.x+this.y*this.y};Point.prototype.add=function(t){return new Point(this.x+t.x,this.y+t.y)};Point.prototype.Add=function(t){this.x+=t.x;this.y+=t.y;return this};Point.prototype.sub=function(t){return new Point(this.x-t.x,this.y-t.y)};Point.prototype.Sub=function(t){this.x-=t.x;this.y-=t.y;return this};Point.prototype.mul=function(t){return this.x*t.x+this.y*t.y};Point.prototype.cross=function(t){return this.x*t.y-this.y*t.x};Point.prototype.equals=function(t,i){return Math.abs(this.x-t.x)<=i&&Math.abs(this.y-t.y)<=i};Point.prototype.normalize=function(){var t=1/this.len();return new Point(this.x*t,this.y*t)};Point.prototype.Normalize=function(){var t=1/this.len();this.x*=t;this.y*=t;return this};Point.prototype.get_perpendicular=function(){return new Point(-this.y,this.x)};Point.prototype.scale=function(t){return new Point(this.x*t,this.y*t)};Point.prototype.Scale=function(t){this.x*=t;this.y*=t;return this};Point.prototype.toString=function(){return"("+this.x+","+this.y+")"};Point.prototype.copy=function(){return new Point(this.x,this.y)};Point.EPS=1e-6;Point.get_closest_point_on_segment=function(t,i,e){var n=i.sub(t),r=n.len();if(r<Point.EPS)return t;var s=n.mul(e.sub(t))/r;if(s<0)return t;if(s>n.len())return i;return t.add(n.scale(s/r))};Point.intersect_ray_with_segment=function(t,i,e,n,r,s){if(typeof r=="undefined")var r=new Point;if(typeof s=="undefined")var s=Point.EPS;var o=n.sub(e);var h=i.cross(o);if(Math.abs(h)>Point.EPS){var a=e.sub(t).cross(i)/h;if(a<-s||a-1>s)return false;var u=e.add(o.scale(a));r.x=u.x;r.y=u.y}else{if(i.len2()<Point.EPS||o.len2()<Point.EPS)return false;var p=t.sub(e).mul(o)/o.mul(o);if(e.add(o.scale(p)).dist(t)>Point.EPS)return false;if(p<-s){r.x=e.x;r.y=e.y}else if(p-1>s){r.x=n.x;r.y=n.y}else{r.x=t.x;r.y=t.y}}if(r.sub(t).mul(i)>=0)return true;else return false};Point.intersect_inner_ray_with_rect=function(t,i,e){var n=new Point(e.x,e.y),r=new Point(e.x+e.width,e.y),s=new Point(e.x,e.y+e.height),o=new Point(e.x+e.width,e.y+e.height),h=e.r;var a=new Point,u,p;if(Point.intersect_ray_with_segment(t,i,n,s,a)){p=new Point(0,1)}else if(Point.intersect_ray_with_segment(t,i,r,o,a)){p=new Point(0,-1)}else if(Point.intersect_ray_with_segment(t,i,n,r,a)){p=new Point(-1,0)}else if(Point.intersect_ray_with_segment(t,i,s,o,a)){p=new Point(1,0)}else return null;if(h===0)return{point:a,tangent:p};var y;if(a.x<n.x+h&&a.y<n.y+h){y=new Circle(n.x+h,n.y+h,h).intersect_with_ray(t,i);a=y[1]||y[0]||a;p=a.sub(new Point(n.x+h,n.y+h)).get_perpendicular().scale(-1).Normalize()}else if(a.x>r.x-h&&a.y<r.y+h){y=new Circle(r.x-h,r.y+h,h).intersect_with_ray(t,i);a=y[1]||y[0]||a;p=a.sub(new Point(r.x-h,r.y+h)).get_perpendicular().scale(-1).Normalize()}else if(a.x<s.x+h&&a.y>s.y-h){y=new Circle(s.x+h,s.y-h,h).intersect_with_ray(t,i);a=y[1]||y[0]||a;p=a.sub(new Point(s.x+h,s.y-h)).get_perpendicular().scale(-1).Normalize()}else if(a.x>o.x-h&&a.y>o.y-h){y=new Circle(o.x-h,o.y-h,h).intersect_with_ray(t,i);a=y[1]||y[0]||a;p=a.sub(new Point(o.x-h,o.y-h)).get_perpendicular().scale(-1).Normalize()}return{point:a,tangent:p}};Point.prototype.is_inside_rect=function(t,i){return t.x<=this.x&&this.x<=i.x&&t.y>=this.y&&this.y>=i.y};Point.intersect_seg_with_rect=function(t,i,e,n){var r=new Point(e.x,e.y);var s=new Point(n.x,e.y);var o=new Point(e.x,n.y);var h=new Point(n.x,n.y);var a=[r,s,h,o];if(t.is_inside_rect(e,n)&&i.is_inside_rect(e,n)){return true}else{for(var u=0;u<a.length;u++){var p=u+1;if(p>a.length-1){p=0}if(Point.intersect_segments(t,i,a[u],a[p])){return true}}}return false};Point.intersect_segments=function(t,i,e,n){if(t.x==e.x&&t.y==e.y&&i.x==n.x&&i.y==n.y){return true}else if(t.x==n.x&&t.y==n.y&&i.x==e.x&&i.y==e.y){return true}var r=((e.y-n.y)*(t.x-e.x)+(n.x-e.x)*(t.y-e.y))/((n.x-e.x)*(t.y-i.y)-(t.x-i.x)*(n.y-e.y));var s=((t.y-i.y)*(t.x-e.x)+(i.x-t.x)*(t.y-e.y))/((n.x-e.x)*(t.y-i.y)-(t.x-i.x)*(n.y-e.y));if(r>=0&&r<=1&&s>=0&&s<=1){return true}return false};if(typeof exports!="undefined"){exports.Point=Point}Circle=function(t,i,e){this.x=t;this.y=i;this.r=e};Circle.prototype.copy=function(){return new Circle(this.x,this.y,this.r)};Circle.prototype.centroid=function(){return new Point(this.x,this.y)};Circle.prototype.area=function(){return Math.PI*this.r*this.r};Circle.prototype.move_to_origin=function(){this.x=0;this.y=0};Circle.prototype.bounding_box=function(){return{x:this.x-this.r,y:this.y-this.r,width:2*this.r,height:2*this.r}};Circle.prototype.intersect_with_ray=function(t,i){var e=t.sub(this),n=i.x*i.x+i.y*i.y,r=2*e.x*i.x+2*e.y*i.y,s=e.x*e.x+e.y*e.y-this.r*this.r,o=r*r-4*n*s;if(o<0)return[];if(o<Point.EPS){var h=-r/(2*n);if(h<0)return[];return[new Point(t).add(i.scale(h))]}var a=[],u=(-r-Math.sqrt(o))/(2*n),p=(-r+Math.sqrt(o))/(2*n);if(u>p){var y=u;u=p;p=y}if(u>=0)a.push(new Point(t).add(i.scale(u)));if(p>=0)a.push(new Point(t).add(i.scale(p)));return a};Circle.fromSVGCircle=function(t){var i=t.attributes;if(i.cx&&i.cy&&i.r){return new Circle(Number(i.cx.value),Number(i.cy.value),Number(i.r.value))}else return null};Circle.fromSVGPath=function(t){if(typeof exclude_ellipse=="undefined")exclude_ellipse=true;var i=t.lookupNamespaceURI("sodipodi");var e=function(e){var n=t.getAttributeNS(i,e);if(n!==null)return n;return t.getAttribute("sodipodi:"+e)};var n,r,s,o;if(e("type")=="arc"&&(n=e("cx"))&&(r=e("cy"))&&(s=e("rx"))&&(o=e("ry"))){var h=e("start"),a=e("end");if(h&&a){var u=Number(a)-Number(h);if(Math.abs(Math.abs(u)-2*Math.PI)>.01&&!(u<0&&u>-.01)){console.log("Warning: this is a circle segment! ||start-end|-2*PI| =",u);return null}}s=Number(s);o=Number(o);n=Number(n);r=Number(r);if(Math.abs(s/o-1)>.05){console.log("Warning: This is an ellipse! rx",s,"ry",o);return null}return new Circle(n,r,(s+o)/2)}return null};Circle.prototype.renderInSvg=function(t,i){var e=t.createElementNS("http://www.w3.org/2000/svg","circle");e.setAttribute("cx",this.x);e.setAttribute("cy",this.y);e.setAttribute("r",this.r);e.style.setProperty("stroke","red");e.style.setProperty("stroke-width",".5px");e.style.setProperty("fill","none");i.appendChild(e);return e};Circle.prototype.renderOnCanvas=function(t,i,e){t.beginPath();t.arc(this.x,this.y,this.r,0,2*Math.PI,true);if(i)t.stroke();if(e)t.fill()};Array.remove=function(t,i,e){var n=t.slice((e||i)+1||t.length);t.length=Math.max(0,i<0?t.length+i:i);for(var r=0;r<n.length;r++)t.push(n[r]);return t.length};Polygon=function(t){this.pts=[];this.closed=true;this.max_error=.2;if(t)this.add_points(t)};Polygon.prototype.copy=function(){var t=new Polygon;t.closed=this.closed;t.max_error=this.max_error;for(var i=0;i<this.pts.length;i++)t.pts.push(this.pts[i].copy());return t};Polygon.prototype.move_to_origin=function(){var t=this.pts.length;var i=this.centroid();for(var e=0;e<t;e++)this.pts[e].Sub(i)};Polygon.prototype.push=function(t){this.pts.push(t);return this.pts};Polygon.prototype.add_points=function(t){for(var i=0;i<t.length;++i)this.pts.push(new Point(t[i][0],t[i][1]))};Polygon.prototype.back=function(){return this.pts[this.pts.length-1]};Polygon.prototype.order_vertices=function(){if(this.area()<0)this.pts.reverse()};Polygon.prototype.bounding_box=function(){var t=this.pts[0].x,i=t,e=this.pts[0].y,n=e;for(var r=1;r<this.pts.length;r++){t=Math.min(t,this.pts[r].x);i=Math.max(i,this.pts[r].x);e=Math.min(e,this.pts[r].y);n=Math.max(n,this.pts[r].y)}return{x:t,y:e,width:i-t,height:n-e}};Polygon.prototype.area=function(){var t=0;var i=this.back();for(var e=0;e<this.pts.length;e++){t+=i.cross(this.pts[e]);i=this.pts[e]}return t*.5};Polygon.prototype.centroid=function(){var t=new Point(0,0);var i=this.pts.length;if(i===0)return t;var e=this.area();if(this.closed&&Math.abs(e)>=Point.EPS){var n=this.back();for(var r=0;r<i;++r){t=t.add(n.add(this.pts[r]).scale(n.cross(this.pts[r])));n=this.pts[r]}t=t.scale(1/(6*e))}else{var s=this.bounding_box();return new Point(s.x+s.width/2,s.y+s.height/2)}return t};Polygon.prototype.get_edge_lengths=function(t){var i=[],e=this.pts.length;for(var n=0;n<e-1;++n)i.push(this.pts[n].dist(this.pts[n+1]));if(this.closed&&e>1)i.push(this.pts[0].dist(this.pts[e-1]));if(t)i.sort(function(t,i){return t-i});return i};Polygon.prototype.is_convex=function(t){var i=this.pts.length;return this.pts[t].sub(this.pts[(t+i-1)%i]).cross(this.pts[(t+1)%i].sub(this.pts[t]))>=0};Polygon.prototype.find_notch=function(){var t=this.pts.length;for(var i=0;i<t;++i)if(!this.is_convex(i))return i;return t};Polygon.prototype.find_intersection=function(t,i,e,n,r){var s=this.pts.length;var o=s;if(typeof n=="undefined")var n=s;if(typeof r=="undefined")var r=s;if(typeof e=="undefined")var e=new Point;for(var h=0;h<s;++h){if(n<s&&(h==n||(s+h+1-n)%s==0))continue;if(r<s&&(h==r||(s+h+1-r)%s==0))continue;var a=new Point;if(Point.intersect_ray_with_segment(t,i,this.pts[(h+1)%s],this.pts[h],a)){if(o==s||a.dist2(t)<e.dist2(t)){e.x=a.x;e.y=a.y;o=h}}}return o};Polygon.prototype.is_visible=function(t,i){var e=this.pts.length;if(t==i||t==(i+1)%e||i==(t+1)%e)return true;var n=this.pts[(e+t-1)%e],r=this.pts[(t+1)%e];var s=this.pts[t].sub(n).cross(this.pts[i].sub(this.pts[t]))>=0;var o=r.sub(this.pts[t]).cross(this.pts[i].sub(r))>=0;if(this.is_convex(t)){if(!(s&&o))return false}else{if(!(s||o))return false}var h=new Point;var a=this.find_intersection(this.pts[t],this.pts[i].sub(this.pts[t]),h,t,i);if(a==e)return true;return h.dist2(this.pts[t])>this.pts[i].dist2(this.pts[t])};Polygon.prototype.split_at=function(t,i){var e=[new Polygon,new Polygon];var n=this.pts.length;for(var r=t;;++r){if(r==n)r=0;e[0].pts.push(this.pts[r].copy());if(r==i)break}for(var r=i;;++r){if(r==n)r=0;e[1].pts.push(this.pts[r].copy());if(r==t)break}return e};Polygon.prototype.split=function(t){if(t<3)return[];var i=this.pts.length;if(i<=t){return[this]}var e=this.find_biggest_angle();var n=(e+Math.round(i/2))%i;var r=this.split_at(e,n);var s=r[0].split(t);return s.concat(r[1].split(t))};Polygon.prototype.angle=function(t){var i=this.pts.length;var e=this.pts[(i+t-1)%i],n=this.pts[t],r=this.pts[(t+1)%i];var s=Math.acos(e.sub(n).normalize().mul(r.sub(n).normalize()));if(!this.is_convex(t))return 2*Math.PI-s;else return s};Polygon.prototype.find_biggest_angle=function(){var t=this.pts.length;var i;var e=t;for(var n=0;n<t;++n){var r=this.angle(n);if(e==t||i<r){e=n;i=r}}return e};Polygon.prototype.merge_vertices=function(t){if(t.min_dist==undefined)t.min_dist=Point.EPS;if(t.min_vertex_count==undefined)t.min_vertex_count=3;if(t.min_vertex_count<1)t.min_vertex_count=1;for(;;){var i=false;var e=this.pts.length;if(e<=t.min_vertex_count)return;var n=[];if(this.pts[0].dist(this.back())<t.min_dist){n.push(this.back().add(this.pts[0]).scale(.5));e-=1;i=true}else{n.push(this.pts[0])}for(var r=1;r<e;++r){if(n[n.length-1].dist(this.pts[r])<t.min_dist){n[n.length-1]=n[n.length-1].add(this.pts[r]).scale(.5);i=true}else n.push(this.pts[r])}if(i)this.pts=n;else return}};Polygon.prototype.remove_superfical_vertices=function(t){if(t.max_error==undefined)t.max_error=Point.EPS;if(t.min_vertex_count==undefined)t.min_vertex_count=3;if(t.min_vertex_count<3)t.min_vertex_count=3;for(;;){var i=false;var e=this.pts.length;var n=e-1;for(;;){if(e<=t.min_vertex_count)return;var r=this.pts[(e+n-1)%e],s=this.pts[(n+1)%e];var o=s.sub(r),h=o.normalize();var a=o.mul(this.pts[n].sub(r));var u;if(a>=0&&a<o.mul(o)){var p=r.add(h.scale(this.pts[n].sub(r).mul(h)));u=this.pts[n].dist(p)}else{if(a<0)u=this.pts[n].dist(r);else u=this.pts[n].dist(s)}if(u<=t.max_error){Array.remove(this.pts,n);e-=1;i=true}if(n==0)break;else n-=1}if(!i)return}};Polygon.prototype.toString=function(){var t=[];for(var i=0;i<this.pts.length;i++)t.push(this.pts[i].x+","+this.pts[i].y);return"("+t.join(" ")+")"};Polygon.prototype.contains_point=function(t){var i=t[0];var e=t[1];var n=this.pts;var r=false;for(var s=0,o=n.length-1;s<n.length;o=s++){var h=n[s].x;var a=n[s].y;var u=n[o].x;var p=n[o].y;var y=a>e!=p>e&&i<(u-h)*(e-a)/(p-a)+h;if(y)r=!r}return r};Polygon.prototype.intersects_with_rect=function(t,i){var e=this.pts;var n=this.bounding_box();if(t.x>n.x+n.width||n.x>i.x)return false;if(t.y<n.y||n.y+n.height<i.y)return false;for(var r=0;r<e.length;r++){if(e[r].is_inside_rect(t,i))return true}if(this.contains_point(t)||this.contains_point(i)||this.contains_point(new Point(i.x,t.y))||this.contains_point(new Point(t.x,i.y)))return true;var s=e.length;for(var r=0;r<s;r++){if(Point.intersect_seg_with_rect(e[r],e[(r+1)%s],t,i))return true}return false};if(typeof exports!="undefined"){exports.Polygon=Polygon}
